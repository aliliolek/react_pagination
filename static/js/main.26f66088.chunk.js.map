{"version":3,"sources":["App.tsx","components/Pagination/Pagination.tsx","utils.ts","index.tsx"],"names":["ItemsPerPage","Pagination","numberOfPages","total","currentPage","setCurrentPage","onPageChange","disableGoToPrevious","disableGoToNext","className","href","onClick","prevCurrentPage","Array","from","length","_","index","map","page","items","to","numbers","n","push","getNumbers","App","useState","Five","perPage","setPerPage","itemsCopy","Math","ceil","startIndex","endIndex","visibleItems","slice","id","onChange","event","target","value","Three","Ten","Twenty","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oMASKA,E,OCCQC,EAA8B,SAAC,GAIrC,IAHEC,EAGH,EAHJC,MACAC,EAEI,EAFJA,YACcC,EACV,EADJC,aAcMC,EAAsC,IAAhBH,EACtBI,EAAkBJ,IAAgBF,EAExC,OACE,qBAAIO,UAAU,aAAd,UACE,oBACEA,UAAS,oBAAeF,EAAsB,WAAa,IAD7D,SAGE,mBACE,UAAQ,WACRE,UAAU,YACVC,KAAK,QACL,gBAAeH,EACfI,QArBiB,WACvBN,GAAe,SAACO,GAAD,OAAqBA,EAAkB,MAelD,oBAWDC,MAAMC,KAAK,CAAEC,OAAQb,IAAiB,SAACc,EAAGC,GAAJ,OAAcA,EAAQ,KAC1DC,KAAI,SAAAC,GAAI,OACP,oBACEV,UAAS,mBAAcL,IAAgBe,EAAO,UAAY,IAD5D,SAIE,mBACE,UAAQ,WACRV,UAAU,YACVC,KAAI,WAAMS,GACVR,QAAS,WAxCnBN,EAyC8Bc,IALtB,SAQGA,KAVEA,MAeX,oBACEV,UAAS,oBAAeD,EAAkB,WAAa,IADzD,SAGE,mBACE,UAAQ,WACRC,UAAU,YACVC,KAAK,QACL,gBAAeF,EACfG,QAlDa,WACnBN,GAAe,SAACO,GAAD,OAAqBA,EAAkB,MA4ClD,wBD9DFQ,EENC,SAAoBN,EAAcO,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIT,EAAMS,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EFDKG,CAAW,EAAG,IACzBP,KAAI,SAAAK,GAAC,qBAAYA,O,SAEfvB,O,iBAAAA,I,eAAAA,I,cAAAA,I,qBAAAA,M,KAOE,IAAM0B,EAAgB,WAC3B,MAA8BC,mBAAS3B,EAAa4B,MAApD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAsCH,mBAAS,GAA/C,mBAAOvB,EAAP,KAAoBC,EAApB,KAEM0B,EAAS,YAAOX,GAChBlB,EAAgB8B,KAAKC,KAAKF,EAAUhB,OAASc,GAO7CK,EAAaL,GAAWzB,EAAc,GACxC+B,EAAWD,EAAaL,EAAU,EAElCM,EAAWJ,EAAUhB,SACvBoB,EAAWJ,EAAUhB,OAAS,GAGhC,IAAMqB,EAAe,YAAIL,GAAWM,MAAMH,EAAYC,EAAW,GAEjE,OACE,sBAAK1B,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiC8B,EAAa,EAD9C,cACqDC,EAAW,EADhE,eACwEJ,EAAUhB,OADlF,OAIA,sBAAKN,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR6B,GAAG,kBACH7B,UAAU,eACV8B,SA5BY,SAACC,GACrBV,GAAYU,EAAMC,OAAOC,OACzBrC,EAAe,IA2BPqC,MAAOb,EALT,UAOE,wBAAQa,MAAO1C,EAAa2C,MAA5B,SAAoC3C,EAAa2C,QACjD,wBAAQD,MAAO1C,EAAa4B,KAA5B,SAAmC5B,EAAa4B,OAChD,wBAAQc,MAAO1C,EAAa4C,IAA5B,SAAkC5C,EAAa4C,MAC/C,wBAAQF,MAAO1C,EAAa6C,OAA5B,SAAqC7C,EAAa6C,cAItD,uBAAOC,QAAQ,kBAAkBrC,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACEN,MAAOD,EAEPE,YAAaA,EACbE,aAAcD,IAEhB,6BACG+B,EAAalB,KAAI,SAAC6B,GAAD,OAChB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YG1EjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.26f66088.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nenum ItemsPerPage {\n  Three = 3,\n  Five = 5,\n  Ten = 10,\n  Twenty = 20,\n}\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(ItemsPerPage.Five);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const itemsCopy = [...items];\n  const numberOfPages = Math.ceil(itemsCopy.length / perPage);\n\n  const handlePerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const startIndex = perPage * (currentPage - 1);\n  let endIndex = startIndex + perPage - 1;\n\n  if (endIndex > itemsCopy.length) {\n    endIndex = itemsCopy.length - 1;\n  }\n\n  const visibleItems = [...itemsCopy].slice(startIndex, endIndex + 1);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex + 1} - ${endIndex + 1} of ${itemsCopy.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handlePerPage}\n            value={perPage}\n          >\n            <option value={ItemsPerPage.Three}>{ItemsPerPage.Three}</option>\n            <option value={ItemsPerPage.Five}>{ItemsPerPage.Five}</option>\n            <option value={ItemsPerPage.Ten}>{ItemsPerPage.Ten}</option>\n            <option value={ItemsPerPage.Twenty}>{ItemsPerPage.Twenty}</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={numberOfPages}\n        // perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {visibleItems.map((item) => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\ntype Props = {\n  total: number,\n  // perPage: number,\n  currentPage: number,\n  onPageChange: (page: number |\n  ((prevCurrentPage: number) => number)) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total: numberOfPages,\n  currentPage,\n  onPageChange: setCurrentPage,\n}) => {\n  const handleCurrentPage = (pageNumber: number) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const goToPreviousPage = () => {\n    setCurrentPage((prevCurrentPage) => prevCurrentPage - 1);\n  };\n\n  const goToNextPage = () => {\n    setCurrentPage((prevCurrentPage) => prevCurrentPage + 1);\n  };\n\n  const disableGoToPrevious = currentPage === 1;\n  const disableGoToNext = currentPage === numberOfPages;\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={`page-item ${disableGoToPrevious ? 'disabled' : ''}`}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={disableGoToPrevious}\n          onClick={goToPreviousPage}\n        >\n          «\n        </a>\n      </li>\n\n      {Array.from({ length: numberOfPages }, (_, index) => index + 1)\n        .map(page => (\n          <li\n            className={`page-item${currentPage === page ? ' active' : ''}`}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => {\n                handleCurrentPage(page);\n              }}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n      <li\n        className={`page-item ${disableGoToNext ? 'disabled' : ''}`}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={disableGoToNext}\n          onClick={goToNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}